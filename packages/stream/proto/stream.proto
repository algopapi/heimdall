syntax = "proto3";

package heimdall.stream;

service HeimdallStream {
    // Legacy streams
    rpc StreamAccounts(StreamRequest) returns (stream AccountUpdate);
    rpc StreamSlots(StreamRequest) returns (stream SlotUpdate);
    rpc StreamTransactions(StreamRequest) returns (stream TransactionUpdate);
    rpc StreamAll(StreamRequest) returns (stream EventUpdate);

    // V2 Pool-specific stream
    rpc StreamPoolUpdates(PoolUpdateRequest) returns (stream PoolUpdate);
}

// V2 Messages
message PoolUpdateRequest {
    string pool_id = 1;
}

message PoolUpdate {
    string pool_id = 1;
    string event_type = 2; // "swap", "balance_update", etc.
    string payload_json = 3; // The specific data for the event type
}


// V1 (Legacy) Messages
message StreamRequest {}

message AccountUpdate {
    uint64 slot = 1;
    bytes pubkey = 2;
    uint64 lamports = 3;
    bytes owner = 4;
    bool executable = 5;
    uint64 rent_epoch = 6;
    bytes data = 7;
    uint64 write_version = 8;
    optional bytes txn_signature = 9;
}

message SlotUpdate {
    uint64 slot = 1;
    uint64 parent = 2;
    uint32 status = 3;
}

message TransactionUpdate {
    bytes signature = 1;
    bool is_vote = 2;
    uint64 slot = 3;
    uint64 index = 4;
}

message EventUpdate {
    oneof event {
        AccountUpdate account = 1;
        SlotUpdate slot = 2;
        TransactionUpdate transaction = 3;
    }
}
